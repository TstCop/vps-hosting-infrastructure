#!/usr/bin/env bash
# validate-vps-structure.sh
# Validar estrutura do projeto VPS Hosting Infrastructure

set -euo pipefail

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YELLOW}üîç Validando estrutura do projeto VPS...${NC}"

# Estrutura obrigat√≥ria
required_dirs=(
    "app"
    "app/src"
    "app/src/api"
    "app/src/api/controllers"
    "app/src/api/routes"
    "core"
    "docs"
    "docs/app"
    "docs/core"
)

required_files=(
    "README.md"
    "PRD.md"
    ".gitignore"
    "app/package.json"
    "app/tsconfig.json"
)

# Verificar diret√≥rios obrigat√≥rios
echo "üìÅ Verificando diret√≥rios obrigat√≥rios..."
for dir in "${required_dirs[@]}"; do
    if [[ ! -d "$dir" ]]; then
        echo -e "${RED}‚ùå Diret√≥rio obrigat√≥rio n√£o encontrado: $dir${NC}"
        exit 1
    fi
done

# Verificar arquivos obrigat√≥rios
echo "üìÑ Verificando arquivos obrigat√≥rios..."
for file in "${required_files[@]}"; do
    if [[ ! -f "$file" ]]; then
        echo -e "${RED}‚ùå Arquivo obrigat√≥rio n√£o encontrado: $file${NC}"
        exit 1
    fi
done

# Verificar que n√£o h√° arquivos na raiz al√©m dos permitidos
echo "üõ°Ô∏è Verificando prote√ß√£o da raiz..."
allowed_root_files=(
    "README.md"
    "PRD.md"
    ".gitignore"
    ".pre-commit-config.yaml"
    ".markdownlint.json"
    "LICENSE"
    "CHANGELOG.md"
)

for file in *; do
    if [[ -f "$file" ]]; then
        if [[ ! " ${allowed_root_files[*]} " == *" ${file} "* ]]; then
            echo -e "${RED}‚ùå Arquivo n√£o permitido na raiz: $file${NC}"
            echo -e "${YELLOW}üí° Mova para o diret√≥rio apropriado (app/, docs/, etc.)${NC}"
            exit 1
        fi
    fi
done

echo -e "${GREEN}‚úÖ Estrutura do projeto VPS validada com sucesso!${NC}"
