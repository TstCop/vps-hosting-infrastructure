#!/usr/bin/env bash
# pre-commit hook - Valida√ß√µes antes do commit
# Este hook executa todas as valida√ß√µes necess√°rias antes de permitir um commit

set -euo pipefail

# Diret√≥rio base do projeto
REPO_ROOT="$(git rev-parse --show-toplevel)"
HOOKS_DIR="$REPO_ROOT/scripts/hooks"

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üöÄ Executando valida√ß√µes pre-commit...${NC}"

# Lista de valida√ß√µes a executar
validations=(
    "validate-vps-structure.sh"
    "validate-network.sh"
    "validate-vagrant.sh"
)

# Executar cada valida√ß√£o
for validation in "${validations[@]}"; do
    validation_path="$HOOKS_DIR/$validation"
    
    if [[ -f "$validation_path" && -x "$validation_path" ]]; then
        echo -e "${YELLOW}üîç Executando $validation...${NC}"
        
        if ! "$validation_path"; then
            echo -e "${RED}‚ùå Valida√ß√£o falhou: $validation${NC}"
            echo -e "${RED}üí• Commit abortado devido a falhas na valida√ß√£o${NC}"
            exit 1
        fi
        
        echo -e "${GREEN}‚úÖ $validation passou${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Valida√ß√£o n√£o encontrada ou n√£o execut√°vel: $validation${NC}"
    fi
done

echo -e "${GREEN}üéâ Todas as valida√ß√µes passaram!${NC}"
echo -e "${GREEN}‚úÖ Commit autorizado${NC}"

exit 0