# -*- mode: ruby -*-
# vi: set ft=ruby :

# GitLab VPS Production Vagrantfile
# IP P√∫blico: 136.243.208.130
# IP Privado: 10.0.0.10

Vagrant.configure('2') do |config|
  # Box configuration
  config.vm.box = 'generic/ubuntu2204'  # Ubuntu 22.04 LTS with libvirt support
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # Configura√ß√µes globais de SSH
  config.ssh.username = 'vagrant'
  config.ssh.password = 'vagrant'
  config.ssh.insert_key = true
  config.ssh.forward_agent = true
  config.ssh.forward_x11 = true

  # Configura√ß√µes globais para melhor performance
  config.vm.box_check_update = false

  # VM definition
  config.vm.define "gitlab-vps" do |gitlab|
    gitlab.vm.hostname = "gitlab-vps"

    # Network configuration
    # Rede principal (bridge para cluster interno)
    gitlab.vm.network 'private_network',
      libvirt__network_name: 'xcloud-internal',
      libvirt__dhcp_enabled: false,
      ip: '192.168.56.104'

    # Rede privada interna (para servi√ßos auxiliares)
    gitlab.vm.network 'private_network',
      libvirt__network_name: 'xcloud-private',
      libvirt__dhcp_enabled: false,
      ip: '10.0.0.10'

    # Configura√ß√£o para IP p√∫blico (documenta√ß√£o/planejamento)
    puts "INFO: gitlab-vps ser√° mapeado para IP p√∫blico 136.243.208.130"

    # Public network (bridge mode) - Commented out for testing
    # gitlab.vm.network "public_network",
    #   dev: "br0",
    #   mode: "bridge"

    # Configura√ß√£o otimizada do provider Libvirt
    gitlab.vm.provider 'libvirt' do |libvirt|
      libvirt.memory = 4096           # 4GB RAM for GitLab
      libvirt.cpus = 2                # 2+ CPUs
      libvirt.cpu_mode = 'host-passthrough'
      libvirt.disk_bus = 'virtio'
      libvirt.nic_model_type = 'virtio'
      libvirt.memorybacking :access, mode: 'shared'
      libvirt.storage :file,
        size: "100G",            # 100GB+ Storage
        type: "qcow2"
      libvirt.machine_virtual_size = 100  # Virtual disk size
      libvirt.video_type = "qxl"
      libvirt.nested = true
      libvirt.driver = "kvm"
    end

    # Synced folders
    gitlab.vm.synced_folder "./config", "/vagrant/config", type: "rsync",
      rsync__args: ["--verbose", "--archive", "--delete", "-z"]
    gitlab.vm.synced_folder "./scripts", "/vagrant/scripts", type: "rsync",
      rsync__args: ["--verbose", "--archive", "--delete", "-z"]

    # Provisionamento b√°sico com configura√ß√£o de DNS
    gitlab.vm.provision 'shell', name: "Basic System Setup", run: 'once', inline: <<-SHELL
      echo "üîß Configurando GitLab VPS..."

      # Configurar APT para n√£o fazer atualiza√ß√µes autom√°ticas
      systemctl mask --now apt-daily.service apt-daily-upgrade.service
      systemctl stop unattended-upgrades 2>/dev/null || true

      # Atualizar apenas pacotes essenciais
      apt-get update -qq 2>/dev/null
      DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
        curl ca-certificates jq net-tools tzdata dnsutils 2>/dev/null

      # Configurar timezone
      ln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime

      # Configurar DNS interno para resolu√ß√£o .xcloud.intra
      echo "nameserver 10.0.0.40" >> /etc/resolvconf/resolv.conf.d/head || true
      echo "search xcloud.intra" >> /etc/resolvconf/resolv.conf.d/head || true

      # Configurar hosts para desenvolvimento
      cat >> /etc/hosts << EOF
# XCloud Internal Services
10.0.0.10 gitlab.xcloud.intra gitlab-vps.xcloud.intra
10.0.0.11 k8s-master-2.xcloud.intra
10.0.0.12 k8s-master-3.xcloud.intra
10.0.0.20 ingress.xcloud.intra
10.0.0.30 services.xcloud.intra
10.0.0.40 dns.xcloud.intra
192.168.56.100 gateway.xcloud.intra
192.168.56.101 loadbalancer.xcloud.intra
192.168.56.102 api-gateway.xcloud.intra
192.168.56.103 web-frontend.xcloud.intra
EOF

      # Limpar cache
      apt-get clean
      rm -rf /var/lib/apt/lists/*

      echo "‚úÖ Sistema b√°sico configurado!"
    SHELL

    # Provisioning scripts execution order
    gitlab.vm.provision "shell", name: "Update System", inline: <<-SHELL
      export DEBIAN_FRONTEND=noninteractive
      apt-get update
      apt-get upgrade -y
    SHELL

    gitlab.vm.provision "shell", name: "Basic Setup",
      path: "scripts/provision-gitlab.sh",
      privileged: true

    gitlab.vm.provision "shell", name: "Install GitLab",
      path: "scripts/install-gitlab.sh",
      privileged: true

    gitlab.vm.provision "shell", name: "Configure Runner",
      path: "scripts/configure-runner.sh",
      privileged: true

    gitlab.vm.provision "shell", name: "Setup SSL",
      path: "scripts/setup-ssl.sh",
      privileged: true

    gitlab.vm.provision "shell", name: "Setup Backup",
      path: "scripts/backup-setup.sh",
      privileged: true

    # Post-provision message
    gitlab.vm.post_up_message = <<-MSG
    ===============================================
    üöÄ GitLab VPS est√° pronto!

    üåê URLs de Acesso:
    - GitLab Web: https://136.243.208.130
    - GitLab Web (Dev): http://localhost:8080
    - GitLab Web (Internal): https://gitlab.xcloud.intra
    - GitLab SSH: git@136.243.208.130:2222

    üîê Credenciais:
    - Usu√°rio: root
    - Senha: consulte /opt/gitlab/embedded/service/gitlab-rails/

    üìä Recursos:
    - RAM: 4GB
    - CPU: 2 cores (host-passthrough)
    - Storage: 100GB
    - IP P√∫blico: 136.243.208.130
    - IP Privado: 10.0.0.10
    - IP Cluster: 192.168.56.104

    üîß Comandos √∫teis:
    vagrant ssh gitlab-vps
    sudo gitlab-ctl status
    sudo gitlab-ctl tail

    üåê Integra√ß√£o XCloud:
    - DNS interno: gitlab.xcloud.intra
    - Rede interna: xcloud-internal (192.168.56.0/24)
    - Rede privada: xcloud-private (10.0.0.0/24)
    ===============================================
    MSG
  end

  # Vagrant plugins requirements
  config.vagrant.plugins = ["vagrant-libvirt", "vagrant-hostmanager"]

  # Host manager configuration
  if Vagrant.has_plugin?("vagrant-hostmanager")
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = false
    config.hostmanager.manage_guest = true
    config.hostmanager.ignore_private_ip = false
    config.hostmanager.include_offline = true
  end
end
